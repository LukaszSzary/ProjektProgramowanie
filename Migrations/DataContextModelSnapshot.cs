// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektProgramowanie;

#nullable disable

namespace ProjektProgramowanie.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("ProjektProgramowanie.Model.dania", b =>
                {
                    b.Property<int>("DaniaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Cena")
                        .HasColumnType("REAL");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DaniaId");

                    b.ToTable("dania");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.lokale", b =>
                {
                    b.Property<int>("LokaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Kuchnia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LokaleId");

                    b.ToTable("lokale");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.oferta", b =>
                {
                    b.Property<int>("LokaleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaniaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OfertaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LokaleId", "DaniaId");

                    b.HasIndex("DaniaId");

                    b.ToTable("oferta");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.opinie", b =>
                {
                    b.Property<int>("OpinieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataWystawienia")
                        .HasColumnType("TEXT");

                    b.Property<int>("LokaleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ocena")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opinia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OpinieId");

                    b.HasIndex("LokaleId");

                    b.ToTable("opinie");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.promocje", b =>
                {
                    b.Property<int>("PromocjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataRozpoczęcia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataZakończenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PromocjeId");

                    b.ToTable("promocje");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.promocjelokalu", b =>
                {
                    b.Property<int>("LokaleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PromocjeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PromocjeLokaluId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LokaleId", "PromocjeId");

                    b.HasIndex("PromocjeId");

                    b.ToTable("promocjelokalu");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.oferta", b =>
                {
                    b.HasOne("ProjektProgramowanie.Model.dania", "Danie")
                        .WithMany("Oferta")
                        .HasForeignKey("DaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektProgramowanie.Model.lokale", "Lokal")
                        .WithMany("Oferta")
                        .HasForeignKey("LokaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danie");

                    b.Navigation("Lokal");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.opinie", b =>
                {
                    b.HasOne("ProjektProgramowanie.Model.lokale", "lokale")
                        .WithMany("Opinie")
                        .HasForeignKey("LokaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lokale");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.promocjelokalu", b =>
                {
                    b.HasOne("ProjektProgramowanie.Model.lokale", "Lokale")
                        .WithMany("Promocjelokalu")
                        .HasForeignKey("LokaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektProgramowanie.Model.promocje", "Promocja")
                        .WithMany("Promocjelokalu")
                        .HasForeignKey("PromocjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lokale");

                    b.Navigation("Promocja");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.dania", b =>
                {
                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.lokale", b =>
                {
                    b.Navigation("Oferta");

                    b.Navigation("Opinie");

                    b.Navigation("Promocjelokalu");
                });

            modelBuilder.Entity("ProjektProgramowanie.Model.promocje", b =>
                {
                    b.Navigation("Promocjelokalu");
                });
#pragma warning restore 612, 618
        }
    }
}
